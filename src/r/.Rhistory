packrat::init(options = list(auto.snapshot = TRUE, vcs.ignore.src = TRUE))
packrat::set_opts(vcs.ignore.lib = FALSE, vcs.ignore.src = FALSE)
packrat::init(options = list(auto.snapshot = TRUE, vcs.ignore.src = TRUE))
install.packages(c('tidyverse', 'anomalize', 'prophet'))
install.packages(c('tidyverse', 'anomalize', 'prophet', 'IRkernel'))
library(tidyverse)
library(anomalize)
library(tidyverse)
library(anomalize)
library(tidyverse)
library(anomalize)
getwd()
tb = read_csv("../../data/NYCHA_TS.csv")
tb = select(tb, c('Building_Meter', 'Month', 'Imputed_KWH'))
tb
ts =  select(filter(tb, Building_Meter == '165.0 - BLD 03_90327795'), 'Building_Meter', 'Month', 'Imputed_KWH')
ts_anomalized <- ts %>%
time_decompose(Imputed_KWH, merge = TRUE) %>%
anomalize(remainder) %>%
time_recompose()
ts_anomalized
trace("plot_anomaly_decomposition",edit=TRUE)
trace("plot_anomaly_decomposition",edit=TRUE)
p1 <- ts_anomalized %>%
plot_anomaly_decomposition(alpha_dot = 0.5) +
ggtitle("Freq/Trend = 'auto'")
p1
trace("plot_anomaly_decomposition",edit=TRUE)
p1 <- ts_anomalized %>%
plot_anomaly_decomposition(alpha_dot = 0.5) +
ggtitle("Freq/Trend = 'auto'")
p1
.libPaths()
lapply(.libPaths(), dir)
?time_decompose
?anomalize
# Generate anomalies
set.seed(100)
x <- rnorm(100)
idx_outliers    <- sample(100, size = 5)
x[idx_outliers] <- x[idx_outliers] + 10
# Visualize simulated anomalies
qplot(1:length(x), x,
main = "Simulated Anomalies",
xlab = "Index")
iqr_outliers <- iqr(x, alpha = 0.05, max_anoms = 0.2, verbose = TRUE)$outlier_report
gesd_outliers <- gesd(x, alpha = 0.05, max_anoms = 0.2, verbose = TRUE)$outlier_report
iqr_outliers
gesd_outliers
ggsetup <- function(data) {
data %>%
ggplot(aes(rank, value, color = outlier)) +
geom_point() +
geom_line(aes(y = limit_upper), color = "red", linetype = 2) +
geom_line(aes(y = limit_lower), color = "red", linetype = 2) +
geom_text(aes(label = index), vjust = -1.25) +
theme_bw() +
scale_color_manual(values = c("No" = "#2c3e50", "Yes" = "#e31a1c")) +
expand_limits(y = 13) +
theme(legend.position = "bottom")
}
p3 <- iqr_outliers %>%
ggsetup() +
ggtitle("IQR: Top outlers sorted by rank")
p4 <- gesd_outliers %>%
ggsetup() +
ggtitle("GESD: Top outlers sorted by rank")
p3
p4
?anormalize
?anomalize
gesd_outliers
?`anomalize_package-package`
??anomalize
?anomalize
df <- tibble(poll_date = seq.Date(from = as.Date("2018-03-14"),
to = as.Date("2018-06-11"),
by = "1 day"),
mac_address = rep("c40415fe7968", 90),
pathloss = rep(50.5, 90))
df[c(4,8),'pathloss'] <- 50.25
df %>%
time_decompose(pathloss, merge = TRUE, method = "twitter") %>%
anomalize(remainder, method = "gesd")
library(tidyverse)
library(anomalize)
df <- tibble(poll_date = seq.Date(from = as.Date("2018-03-14"),
to = as.Date("2018-06-11"),
by = "1 day"),
mac_address = rep("c40415fe7968", 90),
pathloss = rep(50.5, 90))
df[c(4,8),'pathloss'] <- 50.25
df %>%
time_decompose(pathloss, merge = TRUE, method = "twitter") %>%
anomalize(remainder, method = "gesd")
df
rm(df)
df <- tibble(poll_date = seq.Date(from = as.Date("2018-03-14"),
to = as.Date("2018-06-11"),
by = "1 day"),
mac_address = rep("c40415fe7968", 90),
pathloss = rep(50.5, 90))
df[c(4,8),'pathloss'] <- 50.25
df
df %>%
time_decompose(pathloss, merge = TRUE, method = "twitter") %>%
anomalize(remainder, method = "gesd")
df %>%
+     time_decompose(pathloss, merge = TRUE, method = "twitter")
df %>%  time_decompose(pathloss, merge = TRUE, method = "twitter")
result <- df %>%  time_decompose(pathloss, merge = TRUE, method = "twitter")
View(result)
?tsclean
library(tidyverse)
library(anomalize)
tb = read_csv("../../output/NYCHA_TS.csv")
tb = select(tb, c('Building_Meter', 'Month', 'Imputed_KWH'))
getwd()
tb
library(forecast)
ts = select(filter(tb, Building_Meter == accounts[[2]]), 'Month', 'Imputed_KWH')
ts[ts == 0] <- NA
ts
a = select(filter(tb, Building_Meter == accounts[[2]]), 'Month', 'Imputed_KWH')
ts = select(filter(tb, Building_Meter == '1.0 - BLD 01_7838586'), 'Month', 'Imputed_KWH')
ts[ts == 0] <- NA
ts
install.packages("timetk")
librarytimetk
library(timetk)
a = tk_xts(ts, select = NULL, date_var = NULL, silent = FALSE, ...)
a = tk_xts(ts)
ts
a = tk_xts(ts$Imputed_KWH)
a
class(a)
mode(a)
tsclean(a)
b = tsclean9a
;
b = tsclean(a)
b
a
head(a)
head(b)
tail(a)
tail(b)
plot(a)
plot(b)
plot(a)
lines(b, col = "red")
plot()
plot.zoo(cbind(xz, yz))
plot.zoo(cbind(xz, yz),
plot.type = "single",
col = c("red", "blue"))
plot.zoo(cbind(a, b),
plot.type = "single",
col = c("red", "blue"))
version
library(tidyverse)
library(timetk)
data_tbl <- tibble::tibble(
date = seq.Date(as.Date("2016-01-01"), by = 1, length.out = 5),
x    = rep("chr values", 5),
y    = cumsum(1:5),
z    = cumsum(11:15) * rnorm(1))
data_tbl
rnorm(1)
rnorm(1)
cumsum(11:15) * rnorm(1)
cumsum(11:15) * rnorm(1)
cumsum(11:15) * rnorm(1)
data(AirPassengers)
xts5 <- as.xts(AirPassengers)
install.packages('xts')
library(xts)
xts5 <- as.xts(AirPassengers)
xts5
class(xts5)
mode(xts5)
plot(xts5)
xts5
library(tidyverse)
tidyverse_cran_downloads_anomalized
library(tidyverse)
library(tibbletime)
library(anomalize)
tidyverse_cran_downloads
tidyverse_cran_downloads_anomalized <- tidyverse_cran_downloads %>%
time_decompose(count, merge = TRUE)
class(tidyverse_cran_downloads)
set.seed(1)
x=c(rnorm(100,0,1),rnorm(100,0,10))
x
ansvar=cpt.var(x)
ansvar=cpt.var(x)
plot(ansvar)
print(ansvar)
install.packages("changepoint")
library(changepoint)
ansvar=cpt.var(x)
plot(ansvar)
print(ansvar)
plot(x)
install.packages("ecp")
library(ecp)
install.packages(c("modelr", "StanHeaders"))
packrat::status()
packrat::snapshot()
install.packages("stlplus")
library(stlplus)
[87029, 113407, 84843, 104994, 99327, 92052, 60684]
a = [87029, 113407, 84843, 104994, 99327, 92052, 60684]
a = c(87029, 113407, 84843, 104994, 99327, 92052, 60684)
a
std(a)
sd(a)
mean(a)
a[1]
a[2]
for (i in 1:7)
b = b + a[i]^2
b = 0
for (i in 1:7)
b = b + a[i]^2
b
b = 0
for (i in 1:7)
b = b + (a[i] - mean(a))^2
b
b/7
sd(a)
sqrt(b/7)
sqrt(b/6)
?sd
91762 + 1.96 * 6431
0.05 + 0.08543441929
0.05 - 0.04358898944
m = 0.12
se = 0.06499230724
m + se
se = 0.1273849222
m + se
m - se
m
se =
0.1273849222
m + se
m - se
n.c = 6021 + 50000
x.c = 2802
n.e = 5979 + 50000
x.e = 2874
p.pool = (x.e + x.c)/(n.e + n.c)
p.pool
se = sqrt(p.pool * (1-p.pool) * (1/n.c + 1/n.e))
se
.063 - .051
.063 - .051 - .0042 * 1.96
p.c = x.c / n.c
p.e = x.e / n.e
p.e - p.c
p.e - p.c - 1.96 * 0.0013
p.e - p.c + 1.96 * 0.0013
0.0628^2 * 1000
.0628^2
library(tidyquant)
library(timetk)
library(sweep)
install.packages(c("tidyquant", "sweep"))
library(forecast)
library(tidyquant)
library(timetk)
library(sweep)
bike_sales
monthly_qty_by_cat2_nest
monthly_qty_by_cat2 <- bike_sales %>%
mutate(order.month = as_date(as.yearmon(order.date))) %>%
group_by(category.secondary, order.month) %>%
summarise(total.qty = sum(quantity))
monthly_qty_by_cat2
monthly_qty_by_cat2_nest <- monthly_qty_by_cat2 %>%
group_by(category.secondary) %>%
nest(.key = "data.tbl")
monthly_qty_by_cat2_nest
monthly_qty_by_cat2_ts <- monthly_qty_by_cat2_nest %>%
mutate(data.ts = map(.x       = data.tbl,
.f       = tk_ts,
select   = -order.month,
start    = 2011,
freq     = 12))
monthly_qty_by_cat2_ts
autoplot(monthly_qty_by_cat2_ts)
library(dplyr)
library(nycflights13)
dta <- weather %>%
select(origin, time = time_hour, temp, humid, precip) %>%
ts_long()
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
dta <- weather %>%
select(origin, time = time_hour, temp, humid, precip) %>%
ts_long()
install.packages("tsbox")
install.packages("tsbox")
library(dplyr)
library(nycflights13)
dta <- weather %>%
select(origin, time = time_hour, temp, humid, precip) %>%
ts_long()
library(tsbox)
library(dplyr)
library(nycflights13)
dta <- weather %>%
select(origin, time = time_hour, temp, humid, precip) %>%
ts_long()
weather
weather %>%
+     select(origin, time = time_hour, temp, humid, precip)
weather %>% select(origin, time = time_hour, temp, humid, precip)
weather %>% select(origin, time = time_hour, temp, humid, precip) %>% ts_long()
dta <- weather %>%
select(origin, time = time_hour, temp, humid, precip) %>%
ts_long()
dta
dta %>%
filter(id == "temp")
dta %>%
filter(id == "temp") %>%
ts_trend() %>%
ts_plot()
set.seed(12)
dummy.df <- as.data.frame(matrix(round(rnorm(1200),digits=2),nrow=100,ncol=12))
months <- format(seq.Date(as.Date("2013-01-01"), as.Date("2013-12-01"),
by = "month"), format = "%b")
dummy.df
months
colnames(dummy.df) <- months
dummy.df$Year <- seq(1901, 2000)
head(dummy.df)
col(dummy.df)
columns(dummy.df)
info(dummy.df)
describe(dummy.df)
str(dummy.df)
library("reshape2")
dummy.df <- melt(dummy.df, id.vars = "Year")
head(dummy.df)
class(dummy.df)
dummy.df$Date <- as.Date(paste(dummy.df$Year, dummy.df$variable, "01", sep = "-"),
format = ("%Y-%b-%d"))
class(dummy.df)
head(dummy.df)
dummy.df <- dummy.df[order(dummy.df$Date), ]
head(dummy.df)
tb
dummy.df.ts <- ts(dummy.df$value, start=c(1901,1), end=c(2000,12), frequency=12)
head(dummy.df.ts)
ts =  select(filter(tb, Building_Meter == '165.0 - BLD 03_90327795'), 'Building_Meter', 'Month', 'Imputed_KWH')
getwd()
tb = read_csv("../../output/NYCHA_TS.csv")
tb = select(tb, c('Building_Meter', 'Month', 'Imputed_KWH'))
ts =  select(filter(tb, Building_Meter == '165.0 - BLD 03_90327795'), 'Building_Meter', 'Month', 'Imputed_KWH')
ts
ts <- ts[order(ts$Month), ]
ts
min(ts$Month)
c(1901,1)
month(min(tes$Month))
month(min(t=s$Month))
month(min(ts$Month))
year(min(ts$Month))
ts_test <- ts(ts$Imputed_KWH, start=c(year(min(ts$Month)), month(min(ts$Month))), end=c(year(max(ts$Month)), month(max(ts$Month))), frequency=12)
ts_test
autoplot(ts_test)
?year
?month
??month
autoplot(ts_test)
class(ts_test)
remove.packages("tsbox")
?stl
.167 + .95
1.117/2
dframe <- cbind(Monthly = milk,
DailyAverage = milk/monthdays(milk))
library(forecat)
library(forecast)
dframe <- cbind(Monthly = milk,
DailyAverage = milk/monthdays(milk))
